# Form implementation generated from reading ui file 'eloGraf/advanced.ui'
#
# Created by: PyQt6 UI code generator 6.9.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(659, 450)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(Dialog.sizePolicy().hasHeightForWidth())
        Dialog.setSizePolicy(sizePolicy)
        self.gridLayout_2 = QtWidgets.QGridLayout(Dialog)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.tabWidget = QtWidgets.QTabWidget(parent=Dialog)
        self.tabWidget.setObjectName("tabWidget")
        self.general_tab = QtWidgets.QWidget()
        self.general_tab.setObjectName("general_tab")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.general_tab)
        self.verticalLayout.setObjectName("verticalLayout")
        self.groupBox = QtWidgets.QGroupBox(parent=self.general_tab)
        self.groupBox.setObjectName("groupBox")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.groupBox)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.label_stt_engine = QtWidgets.QLabel(parent=self.groupBox)
        self.label_stt_engine.setObjectName("label_stt_engine")
        self.gridLayout_8.addWidget(self.label_stt_engine, 0, 0, 1, 1)
        self.stt_engine_cb = QtWidgets.QComboBox(parent=self.groupBox)
        self.stt_engine_cb.setObjectName("stt_engine_cb")
        self.stt_engine_cb.addItem("")
        self.stt_engine_cb.addItem("")
        self.stt_engine_cb.addItem("")
        self.stt_engine_cb.addItem("")
        self.gridLayout_8.addWidget(self.stt_engine_cb, 0, 1, 1, 1)
        self.verticalLayout.addWidget(self.groupBox)
        self.general_grid_layout = QtWidgets.QGridLayout()
        self.general_grid_layout.setObjectName("general_grid_layout")
        self.precommand = QtWidgets.QLineEdit(parent=self.general_tab)
        self.precommand.setObjectName("precommand")
        self.general_grid_layout.addWidget(self.precommand, 0, 1, 1, 1)
        self.tool_cb = QtWidgets.QComboBox(parent=self.general_tab)
        self.tool_cb.setObjectName("tool_cb")
        self.tool_cb.addItem("")
        self.tool_cb.addItem("")
        self.general_grid_layout.addWidget(self.tool_cb, 12, 1, 1, 1)
        self.deviceName = QtWidgets.QComboBox(parent=self.general_tab)
        self.deviceName.setCurrentText("")
        self.deviceName.setObjectName("deviceName")
        self.general_grid_layout.addWidget(self.deviceName, 3, 1, 1, 1)
        self.env = QtWidgets.QLineEdit(parent=self.general_tab)
        self.env.setObjectName("env")
        self.general_grid_layout.addWidget(self.env, 2, 1, 1, 1)
        self.label_13 = QtWidgets.QLabel(parent=self.general_tab)
        self.label_13.setObjectName("label_13")
        self.general_grid_layout.addWidget(self.label_13, 12, 0, 1, 1)
        self.postcommand = QtWidgets.QLineEdit(parent=self.general_tab)
        self.postcommand.setObjectName("postcommand")
        self.general_grid_layout.addWidget(self.postcommand, 1, 1, 1, 1)
        self.label_12 = QtWidgets.QLabel(parent=self.general_tab)
        self.label_12.setObjectName("label_12")
        self.general_grid_layout.addWidget(self.label_12, 2, 0, 1, 1)
        self.label_11 = QtWidgets.QLabel(parent=self.general_tab)
        self.label_11.setObjectName("label_11")
        self.general_grid_layout.addWidget(self.label_11, 1, 0, 1, 1)
        self.label_10 = QtWidgets.QLabel(parent=self.general_tab)
        self.label_10.setObjectName("label_10")
        self.general_grid_layout.addWidget(self.label_10, 0, 0, 1, 1)
        self.label = QtWidgets.QLabel(parent=self.general_tab)
        self.label.setObjectName("label")
        self.general_grid_layout.addWidget(self.label, 3, 0, 1, 1)
        self.label_14 = QtWidgets.QLabel(parent=self.general_tab)
        self.label_14.setObjectName("label_14")
        self.general_grid_layout.addWidget(self.label_14, 13, 0, 1, 1)
        self.keyboard_le = QtWidgets.QLineEdit(parent=self.general_tab)
        self.keyboard_le.setObjectName("keyboard_le")
        self.general_grid_layout.addWidget(self.keyboard_le, 13, 1, 1, 1)
        self.label_direct_click = QtWidgets.QLabel(parent=self.general_tab)
        self.label_direct_click.setObjectName("label_direct_click")
        self.general_grid_layout.addWidget(self.label_direct_click, 14, 0, 1, 1)
        self.direct_click_cb = QtWidgets.QCheckBox(parent=self.general_tab)
        self.direct_click_cb.setText("")
        self.direct_click_cb.setObjectName("direct_click_cb")
        self.general_grid_layout.addWidget(self.direct_click_cb, 14, 1, 1, 1)
        self.general_grid_layout.setColumnStretch(1, 2)
        self.verticalLayout.addLayout(self.general_grid_layout)
        self.tabWidget.addTab(self.general_tab, "")
        self.gridLayout_2.addWidget(self.tabWidget, 0, 0, 1, 1)
        self.buttonBox = QtWidgets.QDialogButtonBox(parent=Dialog)
        self.buttonBox.setOrientation(QtCore.Qt.Orientation.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.StandardButton.Cancel|QtWidgets.QDialogButtonBox.StandardButton.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.gridLayout_2.addWidget(self.buttonBox, 1, 0, 1, 1)

        self.retranslateUi(Dialog)
        self.tabWidget.setCurrentIndex(0)
        self.buttonBox.accepted.connect(Dialog.accept) # type: ignore
        self.buttonBox.rejected.connect(Dialog.reject) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Advanced Settings"))
        self.groupBox.setTitle(_translate("Dialog", "STT Engine"))
        self.label_stt_engine.setToolTip(_translate("Dialog", "Speech-to-Text engine to use for dictation"))
        self.label_stt_engine.setText(_translate("Dialog", "STT Engine"))
        self.stt_engine_cb.setCurrentText(_translate("Dialog", "nerd-dictation"))
        self.stt_engine_cb.setItemText(0, _translate("Dialog", "nerd-dictation"))
        self.stt_engine_cb.setItemText(1, _translate("Dialog", "whisper-docker"))
        self.stt_engine_cb.setItemText(2, _translate("Dialog", "google-cloud-speech"))
        self.stt_engine_cb.setItemText(3, _translate("Dialog", "openai-realtime"))
        self.tool_cb.setCurrentText(_translate("Dialog", "XDOTOOL"))
        self.tool_cb.setItemText(0, _translate("Dialog", "XDOTOOL"))
        self.tool_cb.setItemText(1, _translate("Dialog", "DOTOOL"))
        self.label_13.setText(_translate("Dialog", "Input simulate tool"))
        self.label_12.setText(_translate("Dialog", "Environment variables"))
        self.label_11.setToolTip(_translate("Dialog", "Command to execute after the dictation is stopped"))
        self.label_11.setText(_translate("Dialog", "Postcommand"))
        self.label_10.setToolTip(_translate("Dialog", "Command to execute before launching the dictation"))
        self.label_10.setText(_translate("Dialog", "Precommand"))
        self.label.setToolTip(_translate("Dialog", "The name of the pulse-audio device to use for recording. \n"
"See the output of \"pactl list sources\" to find device names (using the identifier following \"Name:\")"))
        self.label.setText(_translate("Dialog", "Pulse device name"))
        self.label_14.setText(_translate("Dialog", "Keyboard layout"))
        self.keyboard_le.setToolTip(_translate("Dialog", "<html><head/><body><p>This is used for DOTOOL method</p></body></html>"))
        self.label_direct_click.setToolTip(_translate("Dialog", "When enabled, clicking the tray icon directly toggles dictation. When disabled, shows Start/Stop buttons in the menu."))
        self.label_direct_click.setText(_translate("Dialog", "Direct click toggle"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.general_tab), _translate("Dialog", "General"))
